
#   LC is YAML

# Conventions
#   * Every top-level property should be either a built-in module or an extension module
#   * All extension modules should have layer-cake-<module name> npm name
#   * All extension modules have init(kitchen, cake, layer) exported
#   * _ for all layers means the common configuration of the layer which doesn't change per environment
#   * All other top-layer-level properties are for specific environment configurations

metadata:
    common:
        name:       LayerCake Cacophony Example
        version:    0.0.0.1
        author:     Ivan Erceg
    dev:
        env:    $NODE_ENV

config:
    common:
        port: $CAKE_PORT
        logging:
            - warn
            - error
    dev:
        logging: '*'

analytics:
    common:
        default:
            - verbs
            - routes
            - duration

store:
    common:
        default:
            driver: couch
            config:
                serverUrl: $COUCHDB_SERVER_URL
                databaseName: $COUCHDB_DATABASE_NAME
                modelField: model
                createImplicitViews: true
    test:
        default:
            boot:
                - test-populate  # Idempotent

#
# Special characters:
#   /   -   new route
#

http:
    common:
        default:
            driver: express
            common:
                serializer: json-api
            groups:
                noAuth:
                    before:
                        analytics: default
                        logging: info
                    after:
                        analytics: error
                        monitoring:
                            alert:
                                - 5xx
                    routes:
                        /:
                            GET: get-ping
                        /version:
                            GET: get-metadata
                auth:
                    before:
                        auth: token
                        analytics: default
                        logging: info
                    after:
                        analytics: error
                        monitoring:
                            alert:
                                - 5xx
                    routes:
                        /user: # user is an implicit model - we don't need to define it for NoSQL
                            GET: _ # Perform the default action - GET without an ID means "get all"
                            POST: _ # create user with an automatic ID
                            /:user: # Id by convention has the same name as model - this allows automatic use.
                                GET: _ # get user with the given ID
                                POST: _ # create user with the given ID
                                DELETE: _
                                /conversation:
                                    GET: _
                                    POST: _
                                    /:conversation:
                                        GET: _
                                        POST: _
                                        /message:
                                            GET: _
                                            POST: _
                                            /:message:
                                                GET: _
    dev:
        default:
            groups:
                noAuth:
                    before:
                        logging:
                            - \*
                auth:
                    before:
                        logging:
                            - \*
                    routes:
                        /__explore:
                            GET:
                                action: eval
                                params: res.send(kitchen)

testing:
    common:
        something-should-go-here
